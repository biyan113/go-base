name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 支持手动触发

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # 推送到 GHCR 需要此权限

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录 GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 提取 Docker 元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 分支推送 - 使用分支名
            type=ref,event=branch
            # PR - 使用 pr-数字
            type=ref,event=pr
            # Tag 推送 - 使用语义化版本
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # 总是标记 latest（仅主分支）
            type=raw,value=latest,enable={{is_default_branch}}
            # 添加 SHA 短码
            type=sha,prefix={{branch}}-

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64  # 多平台支持
          push: ${{ github.event_name != 'pull_request' }}  # PR 不推送
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GO_VERSION=1.21.0
            PROTOC_VERSION=21.12
            USE_ALIYUN_MIRROR=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 输出镜像信息
        run: |
          echo "镜像已推送:"
          echo "${{ steps.meta.outputs.tags }}"
